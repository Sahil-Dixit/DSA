package seaching_sorting_algorithms;

public class RotatedSortedArray2 {

	public static boolean search(int[] nums, int target) {
		int start = 0;
		int end = nums.length - 1;
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if (nums[mid] == target) {
				return true;
			}
			if (nums[mid] < nums[end] || nums[mid] < nums[start]) {
				if (nums[mid] < target && target <= nums[end]) {
					start = mid + 1;
				} else {
					end = mid - 1;
				}
			} else if (nums[start] < nums[mid] || nums[mid] > nums[end]) {
				if (nums[mid] > target && target >= nums[start]) {
					end = mid - 1;
				} else {
					start = mid + 1;
				}
			} else {
				start++;
			}
		}
		return false;
	}

	public static void main(String[] args) {
		int[] nums = { 2, 5, 6, 0, 0, 1, 2 };
		int target = 0;
		System.out.println(search(nums, target));

	}

}
