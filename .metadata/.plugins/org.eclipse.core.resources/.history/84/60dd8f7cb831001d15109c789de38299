package SinglyLinkedList;

import java.util.Scanner;

public class SinglyLinkedListUse {

	public static Node<Integer> takeInput() {
		Node<Integer> head = null, tail = null;
		Scanner scn = new Scanner(System.in);
		int data = scn.nextInt();

		while (data != -1) {
			Node<Integer> newNode = new Node<Integer>(data);
			if (head == null) {
				head = newNode;
				tail = newNode;
			} else {
				tail.next = newNode;
				tail = tail.next;
			}
			data = scn.nextInt();
		}
		return head;
	}

	public static Node<Integer> insert(Node<Integer> head, int pos, int data) {
		Node<Integer> newNode = new Node<Integer>(data);
		Node<Integer> temp = head;
		// Node<Integer> temp2 = null;
		if (pos == 0) {
			newNode.next = head;
			head = newNode;
			return head;
		}
		int n = 0;
		while (n < pos - 1) {
			temp = temp.next;
			// temp2 = temp.next;
			n++;
		}
		newNode.next = temp.next;
		temp.next = newNode;
		// newNode.next = temp2;
		return head;
	}

	public static int length(Node<Integer> head) {
		int count = 0;
		while (head != null) {
			count++;
			head = head.next;
		}
		return count;
	}

	public static void print(Node<Integer> head) {
		while (head != null) {
			System.out.print(head.data + " ");
			head = head.next;
		}
	}

	public static void main(String[] args) {
		Node<Integer> head = takeInput();
		head = insert(head, 0, 30);
		print(head);
	}

}
